files:
  "/tmp/getvars.sh":
    mode: "00555"
    owner: root
    group: root
    encoding: plain
    content: |
      #!/bin/bash

      # get the vars from the env
      # Needed because vars are not set for commands, only container_commands
      CLEAN=0

      logMsg()
      {
        INITPID=$$
        PROG="getvars"
        logger -t ${PROG}[$INITPID] $1
        echo $1
      }

      VARS_TO_GET=("NEWRELIC_JAVA_PLUGIN_URL" \
               "SERVER_MONITOR_RPM" \
               "NEWRELIC_LICENSE_KEY" \
               "NEWRELIC_ENABLE" \
              )

      # get the region we are deployed in
      AVAILABILITY_ZONE=`wget -qO- http://instance-data/latest/meta-data/placement/availability-zone`
      REGION_ID=${AVAILABILITY_ZONE:0:${#AVAILABILITY_ZONE} - 1}

      # get our EB env name
      BEANSTALKENV=`{ "Ref" : "AWSEBEnvironmentName" }`

      # get our beanstalk app name
      BEANSTALKAPP=$(/usr/bin/aws elasticbeanstalk describe-environments --environment-names ${BEANSTALKENV} --region ${REGION_ID} |grep "ApplicationName" |cut -f 2 -d ":"|tr -d ","|xargs)

      logMsg "Getting vars from env ${BEANSTALKENV} in ${BEANSTALKAPP} (${REGION_ID})"

      # get the config settings for this env in this app
      /usr/bin/aws elasticbeanstalk describe-configuration-settings --application-name "${BEANSTALKAPP}" --environment-name ${BEANSTALKENV} --region ${REGION_ID} >> /tmp/vars.$$

      rm -f /tmp/envvars
      for VARNAME in "${VARS_TO_GET[@]}"
      do
        logMsg "Getting value for var ${VARNAME}"
        VAL=$(grep -A2 "\"OptionName\": \"${VARNAME}\"" /tmp/vars.$$ |grep Value |cut -f 2 -d ":" |xargs)
        logMsg "Value for ${VARNAME} is ${VAL}"
        echo "${VARNAME}=\"${VAL}\"" >> /tmp/envvars
      done

      if [ $CLEAN -eq 1 ]; then
        rm -f /tmp/vars.$$
      fi

  "/tmp/install-newrelic.sh":
    mode: "00555"
    owner: root
    group: root
    encoding: plain
    content: |
      #!/bin/bash

      . /tmp/envvars

      logMsg()
      {
        INITPID=$$
        PROG="newrelic-install"
        logger -t ${PROG}[$INITPID] $1
        echo $1
      }

      # We always install the agent because of the JVM options requirement
      # Override from beanstalk config params
      if [ ! -z "${NEWRELIC_JAVA_PLUGIN_URL}" ]; then
        AGENT_DOWNLOAD_URL=${NEWRELIC_JAVA_PLUGIN_URL}
      else
        AGENT_DOWNLOAD_URL=https://oss.sonatype.org/content/repositories/releases/com/newrelic/agent/java/newrelic-java/3.21.0/newrelic-java-3.21.0.zip
      fi

      if [ ! -z "${NEWRELIC_SERVER_PLUGIN_RPM}" ]; then
       SERVER_MONITOR_RPM=${NEWRELIC_SERVER_PLUGIN_RPM}
      else
        SERVER_MONITOR_RPM=https://download.newrelic.com/pub/newrelic/el5/i386/newrelic-repo-5-3.noarch.rpm
      fi

      NEWRELIC_CONFIG=/newrelic/newrelic.yml

      logMsg "Downloading the newrelic agent"
      wget ${AGENT_DOWNLOAD_URL} -O /tmp/newrelic.zip --quiet
      RET=$?

      if [ ! -z "${NEWRELIC_LICENSE_KEY}" ]; then
        NR_LICENSE=${NEWRELIC_LICENSE_KEY}
      fi

      if [ $RET -ne 0 ]; then
        logMsg "Failed to download the newrelic agent"
      else
        logMsg "Successfully downloaded the newrelic agent to /tmp/newrelic.zip"

        unzip -o /tmp/newrelic.zip -d /
        RET=$?

        if [ $RET -ne 0 ]; then
          logMsg "Failed to extract the newrelic zip file"
        else
          logMsg "Successfully extracted the newrelic zip file to /newrelic"
          mkdir -p /newrelic/logs
          chmod a+w /newrelic/logs

          if [ ! -z "${NEWRELIC_LICENSE_KEY}" ]; then
            sed -i "/^  license_key:/c\ \ license_key: '${NEWRELIC_LICENSE_KEY}'" ${NEWRELIC_CONFIG}
          else
            logMsg "No newrelic license key proviced in NEWRELIC_LICENSE_KEY var"
          fi

          # sub in the application name
          BEANSTALKENV=`{ "Ref" : "AWSEBEnvironmentName" }`
          if [ "${BEANSTALKENV}" = "" ]; then
            BEANSTALKENV=UNKNOWN_EB_ENV
          fi
          sed -i "/^  app_name:/c\ \ app_name: '${BEANSTALKENV}'" ${NEWRELIC_CONFIG}

          # Set whether the agent should be enabled or not
          if [ ! -z "${NEWRELIC_ENABLE}" ] && [ "${NEWRELIC_ENABLE}" == "yes" ]; then
            logMsg "Enabling newrelic agent"
            sed -i "/^  agent_enabled:/c\ \ agent_enabled: true" ${NEWRELIC_CONFIG}

            if [ ! -z "${NEWRELIC_LICENSE_KEY}" ]; then
              logMsg "Installing the newrelic server monitor agent"
              # Install the server monitor
              rpm -Uvh ${SERVER_MONITOR_RPM}
              yum install -y newrelic-sysmond
              nrsysmond-config --set license_key=${NEWRELIC_LICENSE_KEY}
              /etc/init.d/newrelic-sysmond start
            fi
          else
            logMsg "newrelic agent not selected for enable - disabling"
            sed -i "/^  agent_enabled:/c\ \ agent_enabled: false" ${NEWRELIC_CONFIG}
            if [ -e "/etc/init.d/newrelic-sysmond" ]; then
              /etc/init.d/newrelic-sysmond stop
            fi
          fi
        fi
      fi

commands:
  00_getvars:
    command: '/tmp/getvars.sh'

  00_install_newrelic:
    command: '/tmp/install-newrelic.sh'

option_settings:
  - namespace:  aws:elasticbeanstalk:container:tomcat:jvmoptions
    option_name: "JVM Options"
    value: "-javaagent:/newrelic/newrelic.jar"
